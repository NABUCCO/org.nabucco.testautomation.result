/*
* Copyright 2010 PRODYNA AG
*
* Licensed under the Eclipse Public License (EPL), Version 1.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
* http://www.opensource.org/licenses/eclipse-1.0.php or
* http://www.nabucco-source.org/nabucco-license.html
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/
package org.nabucco.testautomation.result.facade.service.jira;

import org.nabucco.framework.base.facade.exception.service.MaintainException;
import org.nabucco.framework.base.facade.exception.service.SearchException;

import org.nabucco.testautomation.result.facade.message.jira.ProjectListMsg;
import org.nabucco.testautomation.result.facade.message.jira.VersionListMsg;
import org.nabucco.testautomation.result.facade.message.jira.PriorityListMsg;
import org.nabucco.testautomation.result.facade.message.jira.IssueTypeListMsg;
import org.nabucco.testautomation.result.facade.message.jira.ComponentListMsg;
import org.nabucco.testautomation.result.facade.message.jira.IssueMsg;
import org.nabucco.testautomation.result.facade.message.jira.ProjectMsg;

@Author				Markus Jorroch
@Company			PRODYNA AG
@Date				2011-01-05
@Version			1.0
@Description		Jira export service
public Service JiraService {
	
	@ManualImplementation
	public ProjectListMsg getProjects() throws SearchException;
	
	@ManualImplementation
	public PriorityListMsg getPriorities() throws SearchException;

	@ManualImplementation
	public IssueTypeListMsg getIssueTypesOfProject(ProjectMsg msg) throws SearchException;
	
	@ManualImplementation
	public ComponentListMsg getComponentsOfProject(ProjectMsg msg) throws SearchException;
	
	@ManualImplementation
	public IssueMsg createIssue(IssueMsg msg) throws MaintainException;

	@ManualImplementation
	public IssueMsg createIssues(IssueMsg msg) throws MaintainException;
	
	@ManualImplementation
	public VersionListMsg getVersionsOfProject(ProjectMsg msg) throws SearchException;
	
}